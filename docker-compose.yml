version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mainmotor-postgres
    restart: ${RESTART_POLICY:-unless-stopped}
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mainmotor}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      # Performance optimizations
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      # Security settings
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-mainmotor}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: ${DB_MEMORY_LIMIT:-1g}
          cpus: '${DB_CPU_LIMIT:-1.0}'
        reservations:
          memory: 256m
          cpus: '0.25'
    networks:
      - mainmotor-network
    # Security: Run as non-root user
    user: postgres
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  api:
    build:
      context: .
      dockerfile: MainMotor.API/Dockerfile
      target: final
    container_name: mainmotor-api
    restart: ${RESTART_POLICY:-unless-stopped}
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB:-mainmotor};Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-postgres}
      # Logging configuration
      - Logging__LogLevel__Default=${LOG_LEVEL:-Information}
      - Logging__LogLevel__Microsoft.AspNetCore=${LOG_LEVEL:-Warning}
      # Performance settings
      - DOTNET_gcServer=1
      - DOTNET_gcConcurrent=1
      - DOTNET_GCHeapCount=2
      # Security settings
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "${API_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: ${API_MEMORY_LIMIT:-512m}
          cpus: '${API_CPU_LIMIT:-1.0}'
        reservations:
          memory: 128m
          cpus: '0.1'
    networks:
      - mainmotor-network
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

volumes:
  postgres_data:
    driver: local

networks:
  mainmotor-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DOCKER_SUBNET:-172.20.0.0/16}
          gateway: 172.20.0.1
    driver_opts:
      com.docker.network.bridge.name: mainmotor-br
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      com.docker.network.driver.mtu: "1500"